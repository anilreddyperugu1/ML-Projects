# 🔢 Handwritten Digits Classification using SVM (RBF Kernel)

Welcome to the Digit Recognition project! 🧠 This project leverages the popular `load_digits()` dataset from `scikit-learn` to classify handwritten digits (0–9) using a Support Vector Machine with an RBF kernel. Let's dive in! 🚀

---

## 📚 Index

1. [📌 Project Overview](#-project-overview)  
2. [❓ Problem Statement](#-problem-statement)  
3. [🔍 Key Features & Terminologies](#-key-features--terminologies)  
4. [🧰 Libraries Used](#-libraries-used)  
5. [📈 Results & Evaluation](#-results--evaluation)  
6. [🧠 Key Takeaways](#-key-takeaways)

---

## 📌 Project Overview

This project demonstrates handwritten digit recognition using classical machine learning techniques. We apply a **Support Vector Machine (SVM)** with an **RBF (Radial Basis Function) kernel** on the `load_digits()` dataset from `sklearn.datasets`. The goal is to train the model to identify digits based on pixel values from 8x8 grayscale images.

---

## ❓ Problem Statement

➡️ **Objective:**  
To accurately classify handwritten digits (0–9) based on their pixel intensity values using SVM with an RBF kernel.

➡️ **Challenges Addressed:**
- High-dimensional input data
- Multi-class classification
- Choosing optimal kernel for SVM

---

## 🔍 Key Features & Terminologies

- **`load_digits()` Dataset** 🧮  
  Contains 1,797 samples of handwritten digits represented as 8x8 grayscale images (64 features per sample).

- **Support Vector Machine (SVM)** 📏  
  A supervised learning algorithm used for classification, especially effective in high-dimensional spaces.

- **RBF Kernel** 🌐  
  A non-linear kernel that maps data into a higher-dimensional space to separate classes more effectively.

- **Confusion Matrix** 🔀  
  A performance metric showing correct and incorrect predictions by the classifier.

---

## 🧰 Libraries Used

```python
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import confusion_matrix, classification_report
import seaborn as sns
